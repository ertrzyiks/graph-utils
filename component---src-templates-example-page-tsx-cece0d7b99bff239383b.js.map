{"version":3,"sources":["webpack:///../graph-utils/src/addEdgeInPlace/addEdgeInPlace.ts","webpack:///../graph-utils/src/findClosestPaths/findClosestPaths.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/flatten-into-array.js","webpack:///../graph-utils/src/addNodeInPlace/addNodeInPlace.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/add-to-unscopables.js","webpack:///../graph-utils/src/assertNodeExists/index.ts","webpack:///../graph-utils/src/assertNodeExists/assertNodeExists.ts","webpack:///../graph-utils/src/assertResultForNodeExists/assertResultForNodeExists.ts","webpack:///../graph-utils/src/retrieveClosestPath/retrieveClosestPath.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/object-keys.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/function-bind-context.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/to-object.js","webpack:///../graph-utils/src/getNeighboursOf/getNeighboursOf.ts","webpack:///./src/components/ExampleContainer/ExampleContainer.tsx","webpack:///./src/components/ExampleGraph/ExampleGraph.tsx","webpack:///./src/graphConfig.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///./src/components/Preview/Preview.tsx","webpack:///./src/examples/01-add-node.tsx","webpack:///./src/examples/02-add-node-with-data.tsx","webpack:///./src/examples/03-add-edge.tsx","webpack:///./src/examples/04-add-edge-with-data.tsx","webpack:///./src/examples/05-find-the-closest-path.tsx","webpack:///./src/examples.ts","webpack:///./src/templates/ExamplePage.tsx","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/array-species-create.js","webpack:///../graph-utils/src/index.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/modules/es.math.hypot.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/object-create.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/modules/es.array.flat-map.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/html.js","webpack:///../graph-utils/src/createGraph/createGraph.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/object-define-properties.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/modules/es.array.flat.js","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/modules/es.array.unscopables.flat.js","webpack:///../graph-utils/src/getAllNodeIds/getAllNodeIds.ts","webpack:////home/runner/work/graph-utils/graph-utils/node_modules/core-js/internals/is-array.js"],"names":["addEdgeInPlace","graph","edge","from","to","data","nodes","edges","findClosestPaths","params","getDistance","assertNodeExists","unvisited","getAllNodeIds","distance","Infinity","previousNode","currentNode","getNeighboursOf","nodeId","includes","neighborDistance","markAsVisited","getNextNode","list","index","indexOf","splice","value","nextNodeId","isArray","toLength","bind","flattenIntoArray","target","original","source","sourceLen","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","length","TypeError","module","exports","addNodeInPlace","node","id","wellKnownSymbol","create","definePropertyModule","UNSCOPABLES","ArrayPrototype","Array","prototype","undefined","f","configurable","key","Error","assertResultForNodeExists","results","retrieveClosestPath","path","max","Object","keys","i","push","reverse","internalObjectKeys","enumBugKeys","O","aFunction","fn","that","call","a","b","c","apply","arguments","requireObjectCoercible","argument","ExampleContainer","title","description","sourceCode","children","ref","useRef","useLayoutEffect","current","Prism","highlightElement","Typography","variant","className","ExampleGraph","theme","onClick","graphRef","defaultConfig","layout","randomSeed","physics","enabled","borderWidth","size","color","background","useTheme","palette","primary","main","border","font","grey","A400","shape","arrows","labelHighlightBold","secondary","highlight","opacity","selectionWidth","interaction","selectConnectedEdges","dragView","dragNodes","zoomView","setData","vis","on","e","destroy","style","height","maxHeight","SPACINGS","GRID_SIZES","getOffset","val","div","parse","parseFloat","concat","String","replace","props","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","withStyles","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","reduce","accumulator","globalStyles","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","Preview","raw","visual","JSON","stringify","createGraph","Example","map","label","ids","flat","weight","examples","Example1","Example2","Example3","Example4","useState","highlighted","setHighlighted","onNodeClick","ExamplePage","pageContext","example","location","slug","drawerList","allExample","ListItem","Link","button","selected","ListItemText","shortTitle","Layout","mainContent","pageQuery","isObject","SPECIES","originalArray","C","constructor","$","$hypot","hypot","abs","sqrt","stat","forced","NaN","value1","value2","arg","sum","aLen","larg","activeXDocument","anObject","defineProperties","hiddenKeys","html","documentCreateElement","sharedKey","IE_PROTO","EmptyConstructor","scriptTag","content","LT","NullProtoObject","document","domain","ActiveXObject","error","iframeDocument","iframe","write","close","temp","parentWindow","NullProtoObjectViaActiveX","appendChild","src","contentWindow","open","F","Properties","result","toObject","arraySpeciesCreate","proto","flatMap","callbackfn","A","this","getBuiltIn","addToUnscopables","DESCRIPTORS","objectKeys","toInteger","depthArg","classof"],"mappings":"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","file":"component---src-templates-example-page-tsx-cece0d7b99bff239383b.js","sourcesContent":["import {Graph, NodeId} from '../types'\n\ntype EdgeDefinition<NodeData> = { from: NodeId, to: NodeId } & NodeData\n\n/**\n * Add a new edge to the provided graph object by modifying it.\n *\n * @signature addEdgeInPlace(graph, edge): void\n * @param {Graph} graph Target graph object\n * @param {EdgeDefinition} edge Edge definition\n * @param {NodeId} edge.from Id of the source node\n * @param {NodeId} edge.to Id of the target node\n * @param {object} edge.rest Custom properties of the edge\n * @example\n *   addEdgeInPlace(graph, { from: '1', to: '2' })\n * @example\n *   addEdgeInPlace(graph, { from: '1', to: '2', weight: 10 })\n */\nexport function addEdgeInPlace<\n  NodeData,\n  EdgeData\n>(\n  graph: Graph<NodeData, EdgeData>,\n  edge: EdgeDefinition<EdgeData>\n) {\n  const { from, to, ...data } = edge\n  const node = graph.nodes[from]\n  node.edges[to] = {\n    data: data as unknown as EdgeData\n  }\n}\n","import { Graph, NodeId, ClosestPathData } from '../types'\nimport { getAllNodeIds } from '../getAllNodeIds'\nimport { assertNodeExists } from '../assertNodeExists'\nimport { getNeighboursOf } from '../getNeighboursOf'\n\ninterface Params<EdgeData> {\n  from: NodeId\n  getDistance(edge: EdgeData): number\n}\n\n/**\n * Traverse graph and precalculate the closest paths between the source node (starting point) and all other nodes.\n * Use `retrieveClosestPath` and `retrieveClosestPathDistance` to get the details out of the results.\n *\n * @signature findClosestPaths(graph, params): ClosestPathResults\n * @param {Graph} graph\n * @param {Params} params\n * @param {NodeId} params.from The source node\n * @param {(edge: EdgeData) => number} params.getDistance\n * @return {ClosestPathResults}\n *\n * @example\n *   const results = findClosestPaths(graph, {\n *     from: '1',\n *     getDistance: edge => edge.weight\n *   })\n *   const ids = retrieveClosestPath(results, { to: '2' })\n */\nexport function findClosestPaths<\n  NodeData,\n  EdgeData\n>(\n  graph: Graph<NodeData, EdgeData>,\n  params: Params<EdgeData>\n) {\n  const { from, getDistance } = params\n  assertNodeExists(graph, from)\n\n  const unvisited = getAllNodeIds(graph)\n\n  const data: ClosestPathData = {}\n  for (const id of unvisited) {\n    data[id] = { distance: Infinity, previousNode: null }\n  }\n\n  data[from].distance = 0\n\n  let currentNode: string | null = from\n\n  while (currentNode) {\n    const neighbors = getNeighboursOf(graph, currentNode)\n\n    for (const nodeId of neighbors) {\n      if (!unvisited.includes(nodeId)) {\n        continue\n      }\n\n      const neighborDistance = getDistance(graph.nodes[currentNode].edges[nodeId].data)\n\n      if (neighborDistance < data[nodeId].distance) {\n        data[nodeId].distance = data[currentNode].distance + neighborDistance\n        data[nodeId].previousNode = currentNode\n      }\n\n    }\n\n    markAsVisited(unvisited, currentNode)\n    currentNode = getNextNode(data, unvisited)\n  }\n\n  return {\n    from,\n    data\n  }\n}\n\nfunction markAsVisited(list: NodeId[], nodeId: NodeId) {\n  const index = list.indexOf(nodeId)\n\n  if (index > -1) {\n    list.splice(index, 1)\n  }\n\n  return list\n}\n\nfunction getNextNode(data: ClosestPathData, list: NodeId[]) {\n  let value = Infinity\n  let nextNodeId: NodeId | null = null\n\n  for (const nodeId of list) {\n    if (data[nodeId].distance < value) {\n      value = data[nodeId].distance\n      nextNodeId = nodeId\n    }\n  }\n  return nextNodeId\n}\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","import {Graph, NodeId} from '../types'\n\ntype NodeDefinition<NodeData> = { id: NodeId } & NodeData\n\n/**\n * Add a new node to the provided graph object by modifying it.\n *\n * @signature addNodeInPlace(graph, node): void\n * @param {Graph} graph Target graph object\n * @param {NodeDefinition} node Node definition\n * @param {NodeId} node.id Id of the node\n * @param {Record} node.rest Custom properties of the node\n *\n * @example\n *   addNodeInPlace(graph, { id: '1' })\n *\n * @example\n *   addNodeInPlace(graph, { id: '1', label: 'The first node' })\n */\nexport function addNodeInPlace<\n  NodeData,\n  EdgeData,\n>(\n  graph: Graph<NodeData, EdgeData>,\n  node: NodeDefinition<NodeData>\n) {\n  const { id, ...data } = node\n  graph.nodes[id] = {\n    id: id,\n    data: data as unknown as  NodeData,\n    edges: {}\n  }\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","export * from './assertNodeExists'\n","import {NodeId, Graph as BaseGraph} from '../types'\n\n/**\n * Ensure that the provided graph object contains information about the given node.\n *\n * @signature assertNodeExists(graph, nodeId): void\n * @param {Graph} graph Object that should contain the node\n * @param {NodeId} nodeId Id of the node for the lookup\n *\n * @example\n *   assertNodeExists(graph, '1')\n */\nexport function assertNodeExists<\n  NodeData,\n  EdgeData,\n  Graph extends BaseGraph<NodeData, EdgeData>\n>(graph: Graph, nodeId: NodeId) {\n  if (typeof graph.nodes[nodeId] === 'undefined') {\n    throw new Error(`Could not locate node with id = ${nodeId} in the given graph.`)\n  }\n}\n","import {ClosestPathResults, NodeId} from '../types'\n\n/**\n * Ensure that the provided closest path results object contains information about the given node.\n *\n * @signature assertResultForNodeExists(results, nodeId): void\n * @param {ClosestPathResults} results Object that should contain the node\n * @param {NodeId} nodeId Id of the node for the lookup\n *\n * @example\n *   assertResultForNodeExists(results, '1')\n */\nexport function assertResultForNodeExists(results: ClosestPathResults, nodeId: NodeId) {\n  if (typeof results.data[nodeId] === 'undefined') {\n    throw new Error(`Could not locate node with id = ${nodeId} in the given results.`)\n  }\n}\n","import {ClosestPathResults, NodeId, assertResultForNodeExists} from '../index'\n\ninterface Params {\n  to: NodeId\n}\n\n/**\n *\n * @signature retrieveClosestPath(results, params): NodeId[]\n * @param {ClosestPathResults} results\n * @param {Params} params\n * @param {NodeId} params.to\n * @return {NodeId[]}\n *\n * @example\n *   const results = findClosestPaths(graph, {\n *     from: '1',\n *     getDistance: edge => edge.weight\n *   })\n *   const ids = retrieveClosestPath(results, { to: '2' })\n */\nexport function retrieveClosestPath(results: ClosestPathResults, { to }: Params) {\n  assertResultForNodeExists(results, to)\n\n  const data = results.data\n  const path = [] as string[]\n  let currentNode: string | null = to\n\n  if (!data[currentNode].previousNode) {\n    return path\n  }\n\n  const max = Object.keys(data).length\n  let i = 0\n  while (currentNode) {\n    path.push(currentNode)\n    currentNode = data[currentNode].previousNode\n\n    i++\n\n    if (i > max) {\n      throw new Error('Incorrect results! There is an infinite loop in the path.')\n    }\n  }\n\n  return path.reverse()\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","import { NodeId, Graph } from '../types'\nimport { assertNodeExists } from '../assertNodeExists/assertNodeExists'\n\n/**\n * Get a list of ids of all nodes in the graph that are neighbours of the target node.\n * To consider a node as a neighbour of the target node there must be an edge from the target node to the node.\n *\n * @signature getNeighboursOf(graph, nodeId): NodeId[]\n * @param {Graph} graph\n * @param {NodeId} nodeId Id of the target node\n * @return {NodeId[]} A list of ids of all the neighbour nodes\n *\n * @example\n *   const ids = getNeighboursOf(graph, '1')\n */\nexport function getNeighboursOf<\n  NodeData,\n  EdgeData\n>(\n  graph: Graph<NodeData, EdgeData>,\n  nodeId: NodeId\n) {\n  assertNodeExists(graph, nodeId)\n\n  return Object.keys(graph.nodes[nodeId].edges)\n}\n","import React, { ReactNode, useRef, useLayoutEffect } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Prism from '../../vendor/prism'\n\ninterface ExampleProps {\n  title: string\n  description: string\n  sourceCode: string\n  children: ReactNode\n}\n\nexport default function ExampleContainer({\n  title,\n  description,\n  sourceCode,\n  children\n}: ExampleProps) {\n  const ref = useRef<HTMLPreElement>(null)\n  useLayoutEffect(() => {\n    if (ref.current) {\n      Prism.highlightElement(ref.current)\n    }\n  }, [ref])\n\n  return <div>\n    <Typography variant='h3'>{title}</Typography>\n    <Typography variant='body1'>{description}</Typography>\n    <div>\n      <pre ref={ref} className='language-typescript'>{sourceCode}</pre>\n      {children}\n    </div>\n  </div>\n}\n","import React, { useLayoutEffect, useRef } from 'react'\nimport * as vis from 'vis-network'\n\nimport { useDefaultConfig } from '../../graphConfig'\n\nexport default function ExampleGraph({ data, onClick }: { data: any, onClick?: (id: string | null) => void }) {\n  const ref = useRef<HTMLDivElement>(null)\n  const graphRef = useRef<vis.Network>()\n\n  const defaultConfig = useDefaultConfig()\n\n  useLayoutEffect(() => {\n    const graph = graphRef.current\n\n    if (!graph) {\n      return\n    }\n\n    graph.setData(data)\n  }, [ref, graphRef, data])\n\n  useLayoutEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    if (!graphRef.current) {\n      graphRef.current = new vis.Network(ref.current, data, {...defaultConfig})\n\n      if (onClick) {\n        graphRef.current.on('selectNode', (e) => {\n          if (e.nodes.length > 0) {\n            onClick(e.nodes[0])\n          }\n        })\n\n        graphRef.current.on('deselectNode', (e) => {\n          onClick(null)\n        })\n      }\n    }\n\n    return () => {\n      graphRef.current?.destroy()\n      graphRef.current = undefined\n    }\n  }, [ref, graphRef])\n\n\n  return (\n    <div style={{ height: '100%', maxHeight: 500, border: '1px solid #333333' }}>\n      <div ref={ref} style={{ height: 300 }} />\n    </div>\n  )\n}\n","import { useTheme } from '@material-ui/core/styles'\n\nexport function useDefaultConfig() {\n  const theme = useTheme()\n\n  return {\n    layout: {\n      randomSeed: 1000\n    },\n    physics: {\n      enabled: false\n    },\n    nodes: {\n      borderWidth: 2,\n      size: 10,\n      color: {\n        background: theme.palette.primary.main,\n        border: theme.palette.primary.main\n      },\n      font: {\n        color: theme.palette.grey.A400,\n        size: 16\n      },\n      shape: 'dot'\n    },\n    edges: {\n      arrows: {\n        to: {\n          enabled: true\n        },\n        from: {\n          enabled: false\n        }\n      },\n      labelHighlightBold: false,\n      color: {\n        color: theme.palette.secondary.main,\n        highlight: theme.palette.secondary.main,\n        opacity: 0.7\n      },\n      selectionWidth: 0\n    },\n    interaction: {\n      selectConnectedEdges: false,\n      dragView: false,\n      dragNodes: false,\n      zoomView: false\n    }\n  }\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React, {ReactNode, useLayoutEffect, useRef} from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Prism from '../../vendor/prism'\n\nconst Preview = ({ raw, visual}: { raw: object, visual: ReactNode }) => {\n  const ref = useRef<HTMLPreElement>(null)\n  useLayoutEffect(() => {\n    if (ref.current) {\n      Prism.highlightElement(ref.current)\n    }\n  }, [ref])\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <pre ref={ref} className='language-json' style={{ margin: 0 }}>{JSON.stringify(raw, null, 2)}</pre>\n      </Grid>\n      <Grid item xs={6}>\n        {visual}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Preview\n","/**\n * Show how to create a node\n *\n * @title Add a new node to the graph\n * @shortTitle Add node\n */\nimport React from 'react'\nimport ExampleGraph from '../components/ExampleGraph'\nimport Preview from '../components/Preview'\nimport { getAllNodeIds } from '@ertrzyiks/graph-utils'\n\n// <main>\nimport { createGraph, addNodeInPlace } from '@ertrzyiks/graph-utils'\n\nconst graph = createGraph()\naddNodeInPlace(graph, { id: '1' })\naddNodeInPlace(graph, { id: '2' })\naddNodeInPlace(graph, { id: '3' })\n// </main>\n\nconst Example = () => {\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids.map(id => ({\n      id,\n      label: id\n    })),\n    edges: []\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} />}\n    />\n  )\n}\n\nexport default Example\n","/**\n * @title Add node with data\n */\nimport React from 'react'\nimport ExampleGraph from '../components/ExampleGraph/ExampleGraph'\nimport { getAllNodeIds } from '@ertrzyiks/graph-utils'\nimport Preview from '../components/Preview'\n\n// <main>\nimport { createGraph, addNodeInPlace } from '@ertrzyiks/graph-utils'\n\ninterface NodeData {\n  label: string\n}\n\nconst graph = createGraph<NodeData>()\naddNodeInPlace(graph, { id: '1', label: 'Node #1' })\naddNodeInPlace(graph, { id: '2', label: 'Node #2' })\naddNodeInPlace(graph, { id: '3', label: 'Node #3' })\n// </main>\n\nconst Example = () => {\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids.map(id => ({\n      id,\n      label: graph.nodes[id].data.label\n    })),\n    edges: []\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} />}\n    />\n  )\n}\n\nexport default Example\n","/**\n * @title Add edge\n */\nimport React from 'react'\nimport ExampleGraph from '../components/ExampleGraph'\nimport Preview from '../components/Preview'\nimport { getAllNodeIds } from '@ertrzyiks/graph-utils'\n\n// <main>\nimport { createGraph, addNodeInPlace, addEdgeInPlace } from '@ertrzyiks/graph-utils'\n\nconst graph = createGraph()\naddNodeInPlace(graph, { id: '1' })\naddNodeInPlace(graph, { id: '2' })\naddNodeInPlace(graph, { id: '3' })\n\naddEdgeInPlace(graph, { from: '1', to: '2' })\naddEdgeInPlace(graph, { from: '2', to: '3' })\naddEdgeInPlace(graph, { from: '3', to: '2' })\n// </main>\n\nconst Example = () => {\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids.map(id => ({\n      id,\n      label: id\n    })),\n    edges: ids.map(id => Object.keys(graph.nodes[id].edges).map(to => ({ from: id, to }))).flat(1)\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} />}\n    />\n  )\n}\n\nexport default Example\n","/**\n * @title Add edge with data\n */\nimport React from 'react'\nimport ExampleGraph from '../components/ExampleGraph'\nimport Preview from '../components/Preview'\nimport { getAllNodeIds } from '@ertrzyiks/graph-utils'\n\n// <main>\nimport { createGraph, addNodeInPlace, addEdgeInPlace } from '@ertrzyiks/graph-utils'\n\ninterface EdgeData {\n  weight: number\n}\n\nconst graph = createGraph<{}, EdgeData>()\naddNodeInPlace(graph, { id: '1' })\naddNodeInPlace(graph, { id: '2' })\naddNodeInPlace(graph, { id: '3' })\n\naddEdgeInPlace(graph, { from: '1', to: '2', weight: 10 })\naddEdgeInPlace(graph, { from: '2', to: '3', weight: 5 })\n// </main>\n\nconst Example = () => {\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids.map(id => ({\n      id,\n      label: id\n    })),\n    edges: ids.map(id => Object.keys(graph.nodes[id].edges).map(to => ({ from: id, to, label: `weight=${graph.nodes[id].edges[to].data.weight}` }))).flat(1)\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} />}\n    />\n  )\n}\n\nexport default Example\n","/**\n * @title Find the closest path\n */\nimport React, { useState } from 'react'\nimport ExampleGraph from '../components/ExampleGraph'\nimport Preview from '../components/Preview'\nimport { getAllNodeIds, createGraph, addNodeInPlace, addEdgeInPlace } from '@ertrzyiks/graph-utils'\n\ninterface EdgeData {\n  weight: number\n}\n\nconst graph = createGraph<{}, EdgeData>()\naddNodeInPlace(graph, { id: '1'})\naddNodeInPlace(graph, { id: '2'})\naddNodeInPlace(graph, { id: '3'})\naddNodeInPlace(graph, { id: '4'})\naddNodeInPlace(graph, { id: '5'})\naddEdgeInPlace(graph, { from: '1', to: '2', weight: 10 })\naddEdgeInPlace(graph, { from: '2', to: '3', weight: 15 })\naddEdgeInPlace(graph, { from: '1', to: '3', weight: 1 })\naddEdgeInPlace(graph, { from: '3', to: '4', weight: 2 })\naddEdgeInPlace(graph, { from: '1', to: '4', weight: 5 })\naddEdgeInPlace(graph, { from: '4', to: '5', weight: 6 })\naddEdgeInPlace(graph, { from: '1', to: '5', weight: 12 })\n\n// <main>\nimport { findClosestPaths, retrieveClosestPath } from '@ertrzyiks/graph-utils'\n\nconst results = findClosestPaths(graph, {\n  from: '1',\n  getDistance: edge => edge.weight\n})\n\nfunction onNodeClick(id: string) {\n  return retrieveClosestPath(results, { to: id })\n}\n// </main>\n\nconst Example = () => {\n  const [highlighted, setHighlighted] = useState<string[]|null>()\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids\n      .map(id => ({\n        id,\n        label: `Node#${id}`\n      }))\n      .map(node => {\n        if (highlighted && highlighted.includes(node.id)) {\n          return { ...node, color: { background: 'green' }, size: 12}\n        }\n\n        if (highlighted) {\n          return { ...node, opacity: 0.5 }\n        }\n\n        return node\n      }),\n    edges: ids\n      .map(id => Object.keys(graph.nodes[id].edges).map(to => ({ from: id, to, label: `${graph.nodes[id].edges[to].data.weight}` }))).flat(1)\n      .map(edge => {\n        if (highlighted) {\n          const indexOfFrom = highlighted?.indexOf(edge.from)\n          const indexOfTo = highlighted?.indexOf(edge.to)\n\n          if ((indexOfFrom + 1) === indexOfTo) {\n            return { ...edge, color: { color: 'green' }, width: 2 }\n          }\n        }\n\n        return edge\n      })\n  }\n\n  const handleClick = (id: string | null) => {\n    if (id) {\n      setHighlighted(onNodeClick(id))\n    } else {\n      setHighlighted(undefined)\n    }\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} onClick={handleClick} />}\n    />\n  )\n}\n\nexport default Example\n","import Example1 from './examples/01-add-node'\nimport Example2 from './examples/02-add-node-with-data'\nimport Example3 from './examples/03-add-edge'\nimport Example4 from './examples/04-add-edge-with-data'\nimport Example5 from './examples/05-find-the-closest-path'\n\nconst examples = {\n  'test': Example1,\n  'add-node': Example1,\n  'add-node-with-data': Example2,\n  'add-edge': Example3,\n  'add-edge-with-data': Example4,\n  'find-the-closest-path': Example5\n}\n\nexport default examples\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport SEO from \"../components/seo\"\nimport { Drawer, List, ListItem, ListItemText, Divider, Toolbar } from '@material-ui/core'\nimport ExampleContainer from \"../components/ExampleContainer/ExampleContainer\"\nimport Layout from \"../components/Layout\"\nimport examples from '../examples'\n\ninterface ExamplePageProps {\n  data: any\n  pageContext: {\n    example: {\n      slug: string\n      description: string\n      title: string\n      mainContent: string\n      fullContent: string\n    }\n    content: string\n  }\n  location: string\n}\n\n\nexport default function ExamplePage({ data, pageContext, location }: ExamplePageProps) {\n  const { example } = pageContext\n  const Component = examples[example.slug]\n\n  const drawerList = data.allExample.edges.map(({ node }: { node: any }) => (\n    <ListItem component={Link} to={`/examples/${node.slug}`} button key={node.slug} selected={node.slug === example.slug}>\n      <ListItemText primary={node.shortTitle} />\n    </ListItem>\n  ))\n\n  return <Layout drawerList={drawerList}>\n    <SEO title=\"Page two\" />\n\n    <ExampleContainer title={example.title} description={example.description} sourceCode={pageContext.example.mainContent}>\n      <Component />\n    </ExampleContainer>\n  </Layout>\n}\n\nexport const pageQuery = graphql`\n  query getAllExamples {\n    allExample(sort: {fields: position}) {\n      edges {\n        node {\n          shortTitle\n          slug  \n        }\n      }\n    }\n  }\n`\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","export * from './assertNodeExists'\nexport * from './assertResultForNodeExists'\nexport * from './addNodeInPlace'\nexport * from './addEdgeInPlace'\nexport * from './createGraph'\nexport * from './findClosestPaths'\nexport * from './getAllNodeIds'\nexport * from './getNeighboursOf'\nexport * from './retrieveClosestPath'\nexport * from './retrieveClosestPathDistance'\nexport * from './types'\n","var $ = require('../internals/export');\n\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.github.io/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","import { BaseData, Graph } from '../types'\n\n/**\n * Initialize an empty graph object without nodes and edges. The two generic parameters allows to constraint the\n * type of custom properties of nodes and edges. Those constraints are respected by other functions.\n *\n * @signature createGraph(): Graph\n * @return {Graph} A new instance of a graph\n *\n * @example\n *   const graph = createGraph()\n *\n * @example\n *   type NodeData = { label: string }\n *   const graph = createGraph<NodeData>()\n *\n * @example\n *   type EdgeData = { weight: number }\n *   const graph = createGraph<{}, EdgeData>()\n *\n * @example\n *   type NodeData = { label: string }\n *   type EdgeData = { weight: number }\n *   const graph = createGraph<NodeData, EdgeData>()\n */\nexport function createGraph<\n  NodeData extends BaseData = {},\n  EdgeData extends BaseData = {}\n>(): Graph<NodeData, EdgeData> {\n  return { nodes: {} }\n}\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flat');\n","import {Graph} from \"../types\";\n\n/**\n * Get a list of ids of all nodes in the graph.\n *\n * @signature getAllNodeIds(graph): NodeId[]\n * @param {Graph} graph The target graph object\n * @return {NodeId[]} A list of all the node ids.\n *\n * @example\n *   const ids = getAllNodeIds(graph)\n */\nexport function getAllNodeIds<\n  NodeData,\n  EdgeData\n>(\n  graph: Graph<NodeData, EdgeData>\n) {\n  return Object.keys(graph.nodes)\n}\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n"],"sourceRoot":""}
{"componentChunkName":"component---src-templates-example-page-tsx","path":"/examples/add-edge","result":{"data":{"allFile":{"edges":[{"node":{"name":"01-add-node"}},{"node":{"name":"02-add-node-with-data"}},{"node":{"name":"03-add-edge"}},{"node":{"name":"04-add-edge-with-data"}},{"node":{"name":"05-find-the-closest-path"}}]}},"pageContext":{"exampleName":"03-add-edge","content":"import { Graph, addNodeInPlace, addEdgeInPlace } from '@ertrzyiks/graph-utils'\n\nconst graph: Graph = {}\naddNodeInPlace(graph, { id: '1' })\naddNodeInPlace(graph, { id: '2' })\naddNodeInPlace(graph, { id: '3' })\n\naddEdgeInPlace(graph, { from: '1', to: '2' })\naddEdgeInPlace(graph, { from: '2', to: '3' })\naddEdgeInPlace(graph, { from: '3', to: '2' })","fullContent":"import React from 'react'\nimport ExampleGraph from '../components/ExampleGraph'\nimport Preview from '../components/Preview'\nimport { getAllNodeIds } from '@ertrzyiks/graph-utils'\n\nimport { Graph, addNodeInPlace, addEdgeInPlace } from '@ertrzyiks/graph-utils'\n\nconst graph: Graph = {}\naddNodeInPlace(graph, { id: '1' })\naddNodeInPlace(graph, { id: '2' })\naddNodeInPlace(graph, { id: '3' })\n\naddEdgeInPlace(graph, { from: '1', to: '2' })\naddEdgeInPlace(graph, { from: '2', to: '3' })\naddEdgeInPlace(graph, { from: '3', to: '2' })\n\nconst Example = () => {\n  const ids = getAllNodeIds(graph)\n\n  const data = {\n    nodes: ids.map(id => ({\n      id,\n      label: id\n    })),\n    edges: ids.map(id => Object.keys(graph[id].edges).map(to => ({ from: id, to }))).flat(1)\n  }\n\n  return (\n    <Preview\n      raw={graph}\n      visual={<ExampleGraph data={data} />}\n    />\n  )\n}\n\nexport default Example\n"}},"staticQueryHashes":["3649515864","63159454"]}